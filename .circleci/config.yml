version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/python:3.12

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Dummy build step
          command: echo "Build complete"

  approve-to-push-image:
    type: approval

  push-image:
    executor: docker-executor
    steps:
      - run:
          name: Dummy Image Build and Push
          command: echo "Build and push Docker image placeholder"

  approve-to-create-release-branch:
    type: approval

  create-release-branch:
    executor: docker-executor
    environment:
      VERSION_FILE: app/backend/book-store/version.txt
    steps:
      - checkout
      - run:
          name: Install bump2version
          command: |
            pip install bump2version
      - run:
          name: Get release version (strip -SNAPSHOT)
          command: |
            CURRENT_DEV_VERSION=$(<"$VERSION_FILE")
            RELEASE_VERSION="${CURRENT_DEV_VERSION%-SNAPSHOT}"
            RC_VERSION=${RELEASE_VERSION}-RC
            echo "export CURRENT_DEV_VERSION=${CURRENT_DEV_VERSION}" >> "$BASH_ENV"
            echo "export RELEASE_VERSION=${RELEASE_VERSION}" >> "$BASH_ENV"
            echo "export RC_VERSION={RC_VERSION}" >> "$BASH_ENV"

      - run:
          name: Configure Git user and remote
          command: |
            source "$BASH_ENV"
            git config user.email "ci@example.com"
            git config user.name "CircleCI"
            git remote set-url origin https://${GIT_AUTH_TOKEN}@github.com/emilyzeng1977/book-store.git

      - run:
          name: Checkout release branch from develop
          command: |
            source "$BASH_ENV"
            git fetch origin
            git checkout -b release/${RC_VERSION} origin/develop

      - run:
          name: Bump version and push release branch
          command: |
            source "$BASH_ENV"
            bump2version --new-version ${RC_VERSION} --verbose patch
            git add .
            git commit -m "chore: bump version to ${RC_VERSION}"
            git push origin release/$RC_VERSION

  approve-to-start-release:
    type: approval

  start-release:
    executor: docker-executor
    environment:
      VERSION_FILE: app/backend/book-store/version.txt
    steps:
      - checkout
      - run:
          name: Install bump2version
          command: pip install bump2version
      - run:
          name: Load and prepare version info
          command: |
            RC_VERSION=$(<"$VERSION_FILE")
            RELEASE_VERSION="${RC_VERSION%-RC}"
            echo "export RC_VERSION=${RC_VERSION}" >> "$BASH_ENV"
            echo "export RELEASE_VERSION=${RELEASE_VERSION}" >> "$BASH_ENV"
      - run:
          name: Configure Git
          command: |
            source "$BASH_ENV"
            git config user.email "ci@example.com"
            git config user.name "CircleCI"
            git remote set-url origin https://${GIT_AUTH_TOKEN}@github.com/emilyzeng1977/book-store.git
      - run:
          name: Merge release branch into main
          command: |
            source "$BASH_ENV"
            git fetch origin
            git checkout main
            git merge -X theirs --no-ff release/$RELEASE_VERSION -m "chore: release $RELEASE_VERSION"
      - run:
          name: Bump version on main to official release
          command: |
            source "$BASH_ENV"
            bump2version --new-version "$RELEASE_VERSION" --verbose patch
            git add .
            if ! git diff --cached --quiet; then
              git commit -m "chore: set version to $RELEASE_VERSION"
              git push origin main
            else
              echo "No changes to commit."
            fi
#      - run:
#          name: Tag the official release version
#          command: |
#            source "$BASH_ENV"
#            git tag "v$RELEASE_VERSION"
#            git push origin "v$RELEASE_VERSION"

  merge-back-to-develop:
    executor: docker-executor
    environment:
      VERSION_FILE: app/backend/book-store/version.txt
    steps:
      - checkout
      - run:
          name: Configure Git
          command: |
            git config user.email "ci@example.com"
            git config user.name "CircleCI"
            git remote set-url origin https://${GIT_AUTH_TOKEN}@github.com/emilyzeng1977/book-store.git
      - run:
          name: Merge main branch back into develop
          command: |
            git fetch origin
            git checkout develop
            git merge origin/main -m "chore: merge main back to develop"
            git push origin develop

  bump-develop-version:
    executor: docker-executor
    environment:
      VERSION_FILE: app/backend/book-store/version.txt
    steps:
      - checkout
      - run:
          name: Install bump2version
          command: pip install bump2version
      - run:
          name: Configure Git
          command: |
            git config user.email "ci@example.com"
            git config user.name "CircleCI"
            git remote set-url origin https://${GIT_AUTH_TOKEN}@github.com/emilyzeng1977/book-store.git
      - run:
          name: Checkout develop branch
          command: |
            git fetch origin
            git checkout develop
      - run:
          name: Bump to next SNAPSHOT version
          command: |
            RELEASE_VERSION=$(<"$VERSION_FILE")            
            # 解析 major, minor, patch
            IFS='.' read -r MAJOR MINOR PATCH \<<< "$RELEASE_VERSION"
            
            # minor +1，patch归0
            NEXT_MINOR=$((MINOR + 1))
            NEXT_PATCH=0
            
            # 组装新版本号
            NEXT_DEV_VERSION="${MAJOR}.${NEXT_MINOR}.${NEXT_PATCH}-SNAPSHOT"
            
            echo "Next develop version: NEXT_DEV_VERSION"
            bump2version --new-version ${NEXT_DEV_VERSION} --verbose patch
            git add .

            if ! git diff --cached --quiet; then
              git commit -m "chore: bump version to $NEXT_DEV_VERSION"
              git push origin develop
            else
              echo "No changes to commit."
            fi

workflows:
  version: 2
  release-flow:
    jobs:
      - build
      - approve-to-push-image:
          type: approval
          requires:
            - build
      - push-image:
          requires:
            - approve-to-push-image
      - approve-to-create-release-branch:
          type: approval
          filters:
            branches:
              only:
                - develop
      - create-release-branch:
          requires:
            - approve-to-create-release-branch
          filters:
            branches:
              only:
                - develop
      - approve-to-start-release:
          type: approval
          requires:
            - build
          filters:
            branches:
              only:
                - /^release\/.*/
      - start-release:
          requires:
            - approve-to-start-release
          filters:
            branches:
              only:
                - /^release\/.*/
      - merge-back-to-develop:
          requires:
            - start-release
          filters:
            branches:
              only:
                - /^release\/.*/
      - bump-develop-version:
          requires:
            - merge-back-to-develop
          filters:
            branches:
              only:
                - /^release\/.*/